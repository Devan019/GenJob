@model GenJobMVC.ViewModel.CompanyViewModel
@Html.Partial("_Loader")
@Html.Partial("_Sidebar")
<div class="min-h-screen bg-gray-900 flex items-center justify-center p-6">
  <div class="bg-gray-800 shadow-2xl rounded-2xl p-8 w-full max-w-xl border border-gray-700">
    <h2 class="text-2xl font-bold text-white mb-6 text-center">💼 Salary Predictor</h2>

    <!-- Step 1: Company Dropdown -->
    <label class="block text-gray-300 mb-2">Select Company</label>
    <input type="text" id="companySearch" 
           placeholder="Search Company..." 
           class="w-full px-4 py-2 mb-2 rounded-xl bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-200 border border-gray-300 dark:border-gray-600 focus:ring-2 focus:ring-indigo-500 focus:outline-none" />

    <select id="companyDropdown" name="Company"
            class="w-full px-4 py-2 border rounded-xl bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-200 border-gray-300 dark:border-gray-600 focus:ring-2 focus:ring-indigo-500 focus:outline-none">
      <option value="" selected disabled>Select a company</option>
      @foreach (var c in Model.company)
      {
        <option value="@c">@c</option>
      }
    </select>


    <!-- Step 2: Job Role Dropdown -->
    <label class="block text-gray-300 mb-2">Select Role</label>
    <select id="roleDropdown"
      class="w-full mb-4 p-3 rounded-lg bg-gray-700 text-gray-100 border border-gray-600 focus:ring-2 focus:ring-blue-500 focus:outline-none">
    </select>

    <!-- Step 2: Location Dropdown -->
    <label class="block text-gray-300 mb-2">Select Location</label>
    <select id="locationDropdown"
      class="w-full mb-4 p-3 rounded-lg bg-gray-700 text-gray-100 border border-gray-600 focus:ring-2 focus:ring-blue-500 focus:outline-none">
    </select>

    <!-- Step 2: Status Dropdown -->
    <label class="block text-gray-300 mb-2">Select Status</label>
    <select id="statusDropdown"
      class="w-full mb-6 p-3 rounded-lg bg-gray-700 text-gray-100 border border-gray-600 focus:ring-2 focus:ring-blue-500 focus:outline-none">
    </select>

    <!-- Predict Button -->
    <button id="predictBtn"
      class="w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 rounded-xl transition duration-300 ease-in-out shadow-md">
      🔮 Predict Salary
    </button>

    <!-- Result -->
    <div id="result" class="mt-6 text-center text-xl font-bold text-green-400"></div>
  </div>
</div>

<script>
  function showLoader() {
    document.getElementById("loader").classList.remove("hidden");
  }
  function hideLoader() {
    document.getElementById("loader").classList.add("hidden");
  }


  // 1. When company changes, fetch roles/locations/status
  document.getElementById("companyDropdown").addEventListener("change", function () {
    let company_name = this.value;
    let req = { company_name };

    showLoader();

    fetch(`/dashboard/GetCompanyDetails`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(req)
    })
      .then(res => res.json())
      .then(data => {
        console.log(data);
        let roleDropdown = document.getElementById("roleDropdown");
        let locationDropdown = document.getElementById("locationDropdown");
        let statusDropdown = document.getElementById("statusDropdown");

        roleDropdown.innerHTML = `<option value="" disabled selected>Select a role</option>`;
        locationDropdown.innerHTML = `<option value="" disabled selected>Select a location</option>`;
        statusDropdown.innerHTML = `<option value="" disabled selected>Select status</option>`;

        data.data.job_roles.forEach(r => roleDropdown.innerHTML += `<option value="${r}">${r}</option>`);
        data.data.location.forEach(l => locationDropdown.innerHTML += `<option value="${l}">${l}</option>`);
        data.data.employment_status.forEach(s => statusDropdown.innerHTML += `<option value="${s}">${s}</option>`);
      })
      .finally(() => hideLoader());
  });


  // 2. Predict salary
  document.getElementById("predictBtn").addEventListener("click", function () {
    let req = {
      company_name: document.getElementById("companyDropdown").value,
      job_role: document.getElementById("roleDropdown").value,
      location: document.getElementById("locationDropdown").value,
      status: document.getElementById("statusDropdown").value
    };

    showLoader();

    fetch('/dashboard/Predict', {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(req)
    })
      .then(res => res.json())
      .then(data => {
        console.log(data);
        document.getElementById("result").innerHTML = `Predicted Salary: ${data.predicted_salary}`;
      })
      .finally(() => hideLoader());
  });

  const companySearch = document.getElementById("companySearch");
  const companyDropdown = document.getElementById("companyDropdown");

  // Filter companies as user types
  companySearch.addEventListener("input", function() {
    const search = this.value.toLowerCase();
    const options = companyDropdown.querySelectorAll("option");

    options.forEach(option => {
      if(option.value.toLowerCase().includes(search) || option.value === "") {
        option.style.display = "block";
      } else {
        option.style.display = "none";
      }
    });
  });


</script>